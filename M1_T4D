#include <avr/interrupt.h> 

#define PIR_PIN 2
#define TRIG_PIN 4
#define ECHO_PIN 10
#define TMP36_PIN A0
#define LED_PIN 11

volatile bool motionDetected = false;

// PIR Interrupt Service Routine
ISR(PCINT2_vect) {
    if (digitalRead(PIR_PIN) == HIGH) {
        motionDetected = true;
        digitalWrite(LED_PIN, HIGH);
        Serial.println("Motion Detected!");
    } else {
        motionDetected = false;
        digitalWrite(LED_PIN, LOW);
    }
}

void setup() {
    Serial.begin(9600);
    pinMode(PIR_PIN, INPUT);
    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);
    pinMode(TMP36_PIN, INPUT);
    pinMode(LED_PIN, OUTPUT);

    // Enable Pin Change Interrupt for PIR (PCINT18 on PORTD)
    PCICR |= (1 << PCIE2);
    PCMSK2 |= (1 << PCINT18);
    sei(); // Enable global interrupts
}

void loop() {
    // Distance Measurement
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);
    long duration = pulseIn(ECHO_PIN, HIGH);
    float distance = duration * 0.034 / 2;
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");

    // Temperature Measurement
    int sensorValue = analogRead(TMP36_PIN);
    float voltage = sensorValue * (5.0 / 1023.0);
    float temperatureC = (voltage - 0.5) * 100.0;
    Serial.print("Temperature: ");
    Serial.print(temperatureC);
    Serial.println(" Â°C");

    delay(1000);
}
